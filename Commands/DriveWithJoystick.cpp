// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "DriveWithJoystick.h"
#include "../SubSystems/DriveTrain.h"
DriveWithJoystick::DriveWithJoystick() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void DriveWithJoystick::Initialize() {
	
}
// Called repeatedly when this Command is scheduled to run
void DriveWithJoystick::Execute() {
	
	Joystick *leftStick = Robot::oi->getLeftStick();
	Joystick *rightStick = Robot::oi->getRightStick();
	
	float leftaxis = leftStick->GetAxis(Joystick::kYAxis);
	float rightaxis = rightStick->GetAxis(Joystick::kYAxis);
		
	if((leftaxis < 0.1) && (leftaxis > -0.1))
		leftaxis = 0;
	
	if((rightaxis < 0.1) && (rightaxis > -0.1))
		rightaxis = 0;	

//	printf("leftaxis: %f \n", leftaxis);
//	printf("rightaxis: %f \n", rightaxis);

//	printf("DriveWithJoystick is running\n");
	
//	printf("driveTrain is:%x\n",Robot::driveTrain);
	
	Robot::driveTrain->tankDrive(leftaxis, rightaxis);
	
//	printf("Did it crash?\n");
}
// Make this return true when this Command no longer needs to run execute()
bool DriveWithJoystick::IsFinished() {
	return false;
}
// Called once after isFinished returns true
void DriveWithJoystick::End() {
	
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DriveWithJoystick::Interrupted() {
}
